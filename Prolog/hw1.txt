Kam Pui So (Anthony)
CS558 Fall 2014
Homework 1

Problem 1
Part 1:

In imperative language such as C++/Java, first, create an abstract class call Shape, implement two variable call x and y to represent the value(s) needed to calculate the area. Then, create each individual shapes, such as Rectangle, Triangle, ... etc, by extending from Shape. Implement the area base on each individual shapes.

Part 2:

In Prolog, create each prototype such as square(5), triangle(3,8) first. Then, create a predicate area that return true if a shape prototype with the described dimension equal to the area of that shape type.


Problem 2
Matrix is represented by list of list. For example, a two row by three columns matrix is represented as 
	[[1,2,3],[4,5,6]].
transpose(A, B) means matrix A and B are transpose of each other.
The overall algorithm is to verify that each row of A matches with each columns of B in sequential order. Thus, each time a row from A and a column from B matched, a smaller matrix A and smaller matrix B will need to be verify recursively.
The detail algorithm follows prolog program:
1. It is true that empty matrix transpose to empty matrix.
2. It is true that a row matrix transpose to a column matrix.
3. It is true that first matrix transpose to the second matrix iff each row of the first matrix transpose to each column of the second matrix in sequence.




